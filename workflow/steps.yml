minerva_envr: &minerva_envr
  environment_type: 'docker-encapsulated'
  image: 'ptemplem/minerva-workflow'
  imagetag: 'latest'

split_anatuples:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      mkdir {outdir}/mc_runs
      mkdir {outdir}/data_runs
      mkdir {outdir}/index
      export mc_arr=({mc})
      export data_arr=({data})
      source ../scripts/1_split_anatuples.sh -d {outdir} -p {by_playlist}
  publisher:
    publisher_type: 'interpolated-pub'
    glob: true
    publish:
      mc_runs: '{outdir}/mc_runs/'
      data_runs: '{outdir}/data_runs/'
      index: '{outdir}/index/*'
  environment: *minerva_envr

mc_histograms:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      mc_run={mc_runs}$(ls {mc_runs} | grep run$(cat {index}).txt)
      plist=$(echo $mc_run | grep -i _me.._ -o -m 1 | tr -d "_")
      source ../scripts/2_histograms_outfile.sh -i {index} -t mc -o {outdir}
      export XRD_STREAMTIMEOUT=1800
      export XRD_REQUESTTIMEOUT=1800
      root -b -l loadLibs.C "xsec/makeCrossSectionMCInputs.C+({signal_def},\"$plist\",{do_systematics},{do_truth},false,\"$mc_run\",\"$outfile\",{w_exp},{npi},{pim},{pi0})"
  publisher:
    publisher_type: interpolated-pub
    publish:
      histograms: '{outdir}/mc_histogram*.root'
  environment: *minerva_envr

data_histograms:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      data_run={data_runs}$(ls {data_runs} | grep run$(cat {index}).txt)
      plist=$(echo $data_run | grep -i _me.._ -o -m 1 | tr -d "_")
      mc_run={mc_runs}$(ls {mc_runs} | grep run$(cat {index}).txt)
      histogram={outdir}/../$(cd {outdir}/.. && find -name $(echo *histogram$(cat {index}).root) )
      source ../scripts/2_histograms_outfile.sh -i {index} -t data -o {outdir}
      case $data_run in
        *".txt")
          export XRD_STREAMTIMEOUT=1800
          export XRD_REQUESTTIMEOUT=1800
          root -b -l loadLibs.C loadMacros.C "xsec/crossSectionDataFromFile.C+({signal_def},\"$plist\",\"$histogram\",\"$outfile\",\"$data_run\",\"$mc_run\",{w_exp},{npi},{pim},{pi0})"
          ;;
        *)
          cp $histogram $outfile
          ;;
      esac
  publisher:
    publisher_type: interpolated-pub
    publish:
      histograms: '{outdir}/data_histogram*.root'
  environment: *minerva_envr

merge:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      export XRD_STREAMTIMEOUT=1800
      export XRD_REQUESTTIMEOUT=1800
      madd {outdir}/histograms.root {histograms}
  publisher:
    publisher_type: interpolated-pub
    publish:
      histograms: '{outdir}/histograms.root'
  environment: *minerva_envr

plot:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      data_run={data_runs}$(ls {data_runs} | grep run0.txt)
      mc_run={mc_runs}$(ls {mc_runs} | grep run0.txt)
      truth=0
      if {do_truth}; then truth=1; fi
      export XRD_STREAMTIMEOUT=1800
      export XRD_REQUESTTIMEOUT=1800
      root -b -l -q loadLibs.C loadMacros.C "xsec/plotCrossSectionFromFile.C+({signal_def},$truth,\"{histograms}\",\"$data_run\",\"$mc_run\",\"{outdir}\",{w_exp},{npi},{pim},{pi0})"
  publisher:
    publisher_type: interpolated-pub
    publish:
      plots: '{outdir}/*.png'
  environment: *minerva_envr

test:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      root
      TFile f("{histograms}")
      TCanvas c1
      TH1D *n = (TH1D*)f.Get("effnum_tpi")
      n->Draw()
      TCanvas c2
      TH1D *d = (TH1D*)f.Get("effden_tpi")
      d->Draw()
      c1.Print("{outdir}/n.png")
      c2.Print("{outdir}/d.png")
  publisher:
    publisher_type: interpolated-pub
    publish:
      plots: "*.png"
  environment: *minerva_envr

test_vars:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      root -b -q -l loadLibs.C "studies/runCutVariables.C({signal_def},\"ME1A\",\"{data_list}\",\"{mc_list}\",{w_exp},{npi},{pim},{pi0})"
      mv *.png {outdir}
  publisher:
    publisher_type: interpolated-pub
    publish:
      plots: '{outdir}/*.png'
  environment: *minerva_envr

closure:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      root -b -q -l loadLibs.C "xsec/GXSEClosure.C+({signal_def},\"{histograms}\",\"{data_list}\",\"{mc_list}\",{w_exp},{npi},{pim},{pi0})"
      ls
  publisher:
    publisher_type: interpolated-pub
    publish:
      plots: '{outdir}/*.png'
  environment: *minerva_envr