minerva_envr: &minerva_envr
  environment_type: 'docker-encapsulated'
  image: 'ptemplem/minerva-workflow'
  imagetag: 'latest'

split_1:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      export mc_arr=({mc})
      export data='{data}'
      source ../scripts/1_split.sh -d {outdir}
  publisher:
    publisher_type: 'interpolated-pub'
    glob: true
    publish:
      plist: '{outdir}/plist/*'
  environment: *minerva_envr

split_2:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      export mc_file={plist}/mc.txt
      export data_file={plist}/data.txt
      export plist=$(cat {plist}/plist.txt)
      source ../scripts/2_split.sh -d {outdir}
  publisher:
    publisher_type: 'interpolated-pub'
    glob: true
    publish:
      run: '{outdir}/run_*'
  environment: *minerva_envr

mc_histograms:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      mc_run=$(echo {run})/$(ls {run} | grep -i mc)
      plist=$(echo $mc_run | grep -i _me.._ -o -m 1 | tr -d "_")
      cp -r {run} {outdir}
      outfile=$(echo {outdir}/run_*)/histogram.root
      export XRD_STREAMTIMEOUT=300
      root -b -l loadLibs.C "xsec/makeCrossSectionMCInputs.C+({signal_def},\"$plist\",{do_systematics},{do_truth},false,\"$mc_run\",\"$outfile\",{w_exp},{npi},{pim},{pi0})"
  publisher:
    publisher_type: interpolated-pub
    glob: true
    publish:
      output: '{outdir}/run_*'
  environment: *minerva_envr

data_histograms:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      mc_run={plist}/mc.txt
      data_run={plist}/data.txt
      plist=$(cat {plist}/plist.txt)
      histogram={histograms}
      outfile={outdir}/histogram.root
      case $data_run in
        *".txt")
          export XRD_STREAMTIMEOUT=300
          root -b -l loadLibs.C loadMacros.C "xsec/crossSectionDataFromFile.C+({signal_def},\"$plist\",\"$histogram\",\"$outfile\",\"$data_run\",\"$mc_run\",{w_exp},{npi},{pim},{pi0})"
          ;;
        *)
          cp $histogram $outfile
          ;;
      esac
  publisher:
    publisher_type: interpolated-pub
    publish:
      output: '{outdir}/histogram.root'
  environment: *minerva_envr

merge:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      madd {outdir}/histograms.root {histograms}
  publisher:
    publisher_type: interpolated-pub
    publish:
      histograms: '{outdir}/histograms.root'
  environment: *minerva_envr

plot:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      run0=$(echo {run} | tr " " "\n" | grep -i run_0)
      mc_run=$(echo $run0)/$(ls $run0 | grep -i mc)
      data_run=$(echo $run0)/$(ls $run0 | grep -i data)
      truth=0
      if {do_truth}; then truth=1; fi
      root -b -l -q loadLibs.C loadMacros.C "xsec/plotCrossSectionFromFile.C+({signal_def},$truth,\"{histograms}\",\"$data_run\",\"$mc_run\",\"{outdir}\",{w_exp},{npi},{pim},{pi0})"
  publisher:
    publisher_type: interpolated-pub
    publish:
      plots: '{outdir}/*.png'
  environment: *minerva_envr

test:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      echo "test"
      echo {runs}
      ls {runs}
  publisher:
    publisher_type: interpolated-pub
    publish:
     output: '{outdir}'
  environment: *minerva_envr

test_vars:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      root -b -q -l loadLibs.C "studies/runCutVariables.C({signal_def},\"ME1A\",\"{data_list}\",\"{mc_list}\",{w_exp},{npi},{pim},{pi0})"
      mv *.png {outdir}
  publisher:
    publisher_type: interpolated-pub
    publish:
      plots: '{outdir}/*.png'
  environment: *minerva_envr

closure:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      root -b -q -l loadLibs.C "xsec/GXSEClosure.C+({signal_def},\"{histograms}\",\"{data_list}\",\"{mc_list}\",{w_exp},{npi},{pim},{pi0})"
      ls
  publisher:
    publisher_type: interpolated-pub
    publish:
      plots: '{outdir}/*.png'
  environment: *minerva_envr