minerva_envr: &minerva_envr
  environment_type: 'docker-encapsulated'
  image: 'ptemplem/minerva-workflow'
  imagetag: 'test'

split_anatuples:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      mkdir {outdir}/mc_runs
      mkdir {outdir}/data_runs
      mkdir {outdir}/index
      export mc_arr=({mc})
      export data_arr=({data})
      source ../scripts/1_split_anatuples.sh -d {outdir} -p {by_playlist}
  publisher:
    publisher_type: 'interpolated-pub'
    glob: true
    publish:
      mc_runs: '{outdir}/mc_runs/'
      data_runs: '{outdir}/data_runs/'
      index: '{outdir}/index/*'
      mc_list: '{outdir}/workflow_mc_list.txt'
      data_list: '{outdir}/workflow_data_list.txt'
  environment: *minerva_envr

mc_histograms:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      mc_run={mc_runs}$(ls {mc_runs} | grep $(cat {index}).txt)
      source ../scripts/2_histograms_outfile.sh -i {index} -t mc -o {outdir}
      root -b -l loadLibs.C "xsec/makeCrossSectionMCInputs.C+({signal_def},\"ME1A\",{do_truth},{do_systematics},false,\"$mc_run\",\"$outfile\",{w_exp},{npi},{pim},{pi0})"
  publisher:
    publisher_type: interpolated-pub
    publish:
      histograms: '{outdir}/mc_histogram*.root'
  environment: *minerva_envr

data_histograms:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      data_run={data_runs}$(ls {data_runs} | grep $(cat {index}).txt)
      mc_run={mc_runs}$(ls {mc_runs} | grep $(cat {index}).txt)
      histogram={outdir}/../$(cd {outdir}/.. && find -name $(echo *$(cat {index}).root) )
      source ../scripts/2_histograms_outfile.sh -i {index} -t data -o {outdir}
      case $data_run in
        *".txt")
          root -b -l loadLibs.C loadMacros.C "xsec/crossSectionDataFromFile.C+({signal_def},\"ME1A\",\"$histogram\",\"$outfile\",\"$data_run\",\"$mc_run\",{w_exp},{npi},{pim},{pi0})"
          ;;
        *)
          cp $histogram $outfile
          ;;
      esac
  publisher:
    publisher_type: interpolated-pub
    publish:
      histograms: '{outdir}/data_histogram*.root'
  environment: *minerva_envr

merge:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      madd {outdir}/histograms.root {histograms}
  publisher:
    publisher_type: interpolated-pub
    publish:
      histograms: '{outdir}/histograms.root'
  environment: *minerva_envr

plot:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      truth=0
      if {do_truth}; then truth=1; fi
      root -b -l -q loadLibs.C loadMacros.C "xsec/plotCrossSectionFromFile.C+({signal_def},$truth,\"{histograms}\",\"{data_list}\",\"{mc_list}\",{w_exp},{npi},{pim},{pi0})"
      mv Migration*.png {outdir}
      mv Selection*.png {outdir}
      if {do_truth}; then source ../scripts/5_plot.sh -o {outdir}; fi
      if {do_systematics}; then mv Eff*.png {outdir}; fi
  publisher:
    publisher_type: interpolated-pub
    publish:
      plots: '{outdir}/*.png'
  environment: *minerva_envr

test:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      echo {mc_list}
  publisher:
    publisher_type: interpolated-pub
    publish:
      blank: ''
  environment: *minerva_envr

test_vars:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      root -b -q -l loadLibs.C "studies/runCutVariables.C({signal_def},\"ME1A\",\"{data_list}\",\"{mc_list}\",{w_exp},{npi},{pim},{pi0})"
      mv *.png {outdir}
  publisher:
    publisher_type: interpolated-pub
    publish:
      plots: '{outdir}/*.png'
  environment: *minerva_envr