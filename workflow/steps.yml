minerva_envr: &minerva_envr
  environment_type: 'docker-encapsulated'
  image: 'ptemplem/minerva-workflow'
  imagetag: 'latest'

split_anatuples:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      touch {outdir}/workflow_data_list.txt
      touch {outdir}/workflow_mc_list.txt
      for file_name in {data}; do
        case $(file -b $file_name) in

          "ASCII text" | "ASCII text, with CRLF line terminators" | "ASCII text, with no line terminators")
            cat $file_name >> {outdir}/workflow_data_list.txt
            ;;

          "directory")
            cat $file_name/*.txt >> {outdir}/workflow_data_list.txt
            ;;

          *)
            echo $file_name >> {outdir}/workflow_data_list.txt
            ;;
        esac
      done
      for file_name in {mc}; do
        case $(file -b $file_name) in

          "ASCII text" | "ASCII text, with CRLF line terminators" | "ASCII text, with no line terminators")
            cat $file_name >> {outdir}/workflow_mc_list.txt
            ;;

          "directory")
            cat $file_name/*.txt >> {outdir}/workflow_mc_list.txt
            ;;

          *)
            echo $file_name >> {outdir}/workflow_mc_list.txt
            ;;
        esac
      done
      source ../scripts/1_split_anatuples.sh -d {outdir}
  publisher:
    publisher_type: interpolated-pub
    publish:
      data_list: '{outdir}/workflow_data_list.txt'
      mc_list: '{outdir}/workflow_mc_list.txt'
      mc_runs: '{outdir}/mc_runs/*'
  environment: *minerva_envr

make_histograms:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      root -b -l loadLibs.C loadMacros.C "xsec/makeCrossSectionMCInputs.C+(0,\"ME1A\",false,false,false,\"$(cat {mc_runs})\",0,\"id\",\"{outdir}/histogram\")"
  publisher:
    publisher_type: interpolated-pub
    publish:
      histograms: '{outdir}/histogram*'
  environment: *minerva_envr

merge:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      madd {outdir}/MCXSecInputs.root {histograms}
  publisher:
    publisher_type: interpolated-pub
    publish:
      histograms: '{outdir}/MCXSecInputs.root'
  environment: *minerva_envr

xsec_calculation:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      root -b -l loadLibs.C loadMacros.C "xsec/crossSectionDataFromFile.C+(0,\"ME1A\",\"{histograms}\",\"{outdir}/XSec.root\",\"{data_list}\",\"{mc_list}\")"
  publisher:
    publisher_type: interpolated-pub
    publish:
      xsec: '{outdir}/XSec.root'
  environment: *minerva_envr

plot:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      root -b -l -q loadLibs.C loadMacros.C "xsec/plotCrossSectionFromFile.C+(0,1,\"{xsec}\",\"{data_list}\",\"{mc_list}\")"
      mv *.png {outdir}
  publisher:
    publisher_type: interpolated-pub
    publish:
      plots: '{outdir}/*.png'
  environment: *minerva_envr

test:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      ls xsec
  publisher:
    publisher_type: interpolated-pub
    publish:
      blank: '{outdir}'
  environment: *minerva_envr

test_vars:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      root -b -q -l loadLibs.C "studies/runCutVariables.C(0,\"ME1A\",\"{data_list}\",\"{mc_list}\")"
      mv *.png {outdir}
  publisher:
    publisher_type: interpolated-pub
    publish:
      plots: '{outdir}/*.png'
  environment: *minerva_envr