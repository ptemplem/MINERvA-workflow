stages:
- name: split_1
  dependencies: [init]
  scheduler:
    scheduler_type: singlestep-stage
    parameters:
      data: {step: init, output: data}
      mc: {step: init, output: mc}
      outdir: '{workdir}'
    step: {$ref: 'workflow/steps.yml#/split_1'}
- name: run_plist
  dependencies: [split_1]
  scheduler:
    scheduler_type: multistep-stage
    parameters:
      plist: {step: split_1, output: plist}
      mc_size: {step: init, output: mc_size}
      do_truth: {step: init, output: do_truth}
      do_systematics: {step: init, output: do_systematics}
      signal_def: {step: init, output: signal_def}
      w_exp: {step: init, output: w_exp}
      npi: {step: init, output: npi}
      pim: {step: init, output: pim}
      pi0: {step: init, output: pi0}
    workflow: {$ref: 'workflow/run_plist.yml'}
    scatter:
        method: zip
        parameters: [plist]
- name: merge_2
  dependencies: [run_plist]
  scheduler:
    scheduler_type: singlestep-stage
    parameters:
      histograms: {stages: 'run_plist[*].data_histograms', output: output}
      outdir: '{workdir}'
    step: {$ref: 'workflow/steps.yml#/merge'} 
- name: plot
  dependencies: [merge_2]
  scheduler:
    scheduler_type: singlestep-stage
    parameters:
      data: {step: init, output: data}
      mc: {step: init, output: mc}
      histograms: {step: merge_2, output: histograms}
      do_truth: {step: init, output: do_truth}
      do_systematics: {step: init, output: do_systematics}
      signal_def: {step: init, output: signal_def}
      w_exp: {step: init, output: w_exp}
      npi: {step: init, output: npi}
      pim: {step: init, output: pim}
      pi0: {step: init, output: pi0}
      outdir: '{workdir}'
    step: {$ref: 'workflow/steps.yml#/plot'}