stages:
- name: split_2
  dependencies: [init]
  scheduler:
    scheduler_type: singlestep-stage
    parameters:
      plist: {step: init, output: plist}
      mc_size: {step: init, output: mc_size}
      outdir: '{workdir}'
    step: {$ref: 'steps.yml#/split_2'}
- name: mc_histograms
  dependencies: [split_2]
  scheduler:
    scheduler_type: multistep-stage
    parameters:
      run: {step: 'split_2', output: run}
      outdir: '{workdir}'
      do_truth: {step: init, output: do_truth}
      do_systematics: {step: init, output: do_systematics}
      signal_def: {step: init, output: signal_def}
      w_exp: {step: init, output: w_exp}
      npi: {step: init, output: npi}
      pim: {step: init, output: pim}
      pi0: {step: init, output: pi0}
    step: {$ref: 'steps.yml#/mc_histograms'}
    scatter:
        method: zip
        parameters: [run]
- name: merge_1
  dependencies: [mc_histograms]
  scheduler:
    scheduler_type: singlestep-stage
    parameters:
      histograms: {stages: 'mc_histograms[*]', output: output}
      outdir: '{workdir}'
    step: {$ref: 'steps.yml#/merge'}
- name: data_histograms
  dependencies: [merge_1]
  scheduler:
    scheduler_type: singlestep-stage
    parameters:
      plist: {step: init, output: plist}
      histograms: {step: 'merge_1', output: histograms}
      signal_def: {step: init, output: signal_def}
      w_exp: {step: init, output: w_exp}
      npi: {step: init, output: npi}
      pim: {step: init, output: pim}
      pi0: {step: init, output: pi0}
      outdir: '{workdir}'
    step: {$ref: 'steps.yml#/data_histograms'} 
